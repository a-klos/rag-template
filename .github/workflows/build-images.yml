name: build-images
on:
  workflow_run:
    workflows: [create-release]
    types: [completed]

permissions:
  contents: read
  packages: write

jobs:
  build:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      IMAGE_NS: ${{ github.repository }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Checkout latest release tag (from triggering run)
        id: release_tag
        run: |
          set -e
          git fetch --tags --force
          HEAD_SHA="${{ github.event.workflow_run.head_sha }}"
          # Prefer a tag that points exactly at the triggering commit
          TAG=$(git tag --points-at "$HEAD_SHA" | head -n 1 || true)
          # Fallback to nearest tag reachable from the commit
          if [ -z "$TAG" ]; then
            TAG=$(git describe --tags --abbrev=0 "$HEAD_SHA" 2>/dev/null || true)
          fi
          # Fallback to latest semver-ish tag if still empty
          if [ -z "$TAG" ]; then
            TAG=$(git tag -l --sort=-v:refname | head -n 1 || true)
          fi
          if [ -z "$TAG" ]; then
            echo "No Git tag found to check out" >&2
            exit 1
          fi
          echo "Checking out tag $TAG"
          git checkout "$TAG"
          VER_NO_V="${TAG#v}"
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "version=$VER_NO_V" >> $GITHUB_OUTPUT

      - name: Normalize IMAGE_NS to lowercase
        run: echo "IMAGE_NS=$(echo '${{ env.IMAGE_NS }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Setup Node (for frontend context)
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install frontend deps (workspace cache for Docker layer cache)
        working-directory: services/frontend
        run: npm ci || true

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push images
        run: |
          set -e
          VERSION="${{ steps.release_tag.outputs.version }}"
          docker buildx build --push -t "$REGISTRY/$IMAGE_NS/rag-backend:${VERSION}" -f services/rag-backend/Dockerfile .
          docker buildx build --push -t "$REGISTRY/$IMAGE_NS/admin-backend:${VERSION}" -f services/admin-backend/Dockerfile .
          docker buildx build --push -t "$REGISTRY/$IMAGE_NS/document-extractor:${VERSION}" -f services/document-extractor/Dockerfile .
          docker buildx build --push -t "$REGISTRY/$IMAGE_NS/mcp-server:${VERSION}" -f services/mcp-server/Dockerfile .
          docker buildx build --push -t "$REGISTRY/$IMAGE_NS/frontend:${VERSION}" -f services/frontend/apps/chat-app/Dockerfile .
          docker buildx build --push -t "$REGISTRY/$IMAGE_NS/admin-frontend:${VERSION}" -f services/frontend/apps/admin-app/Dockerfile .

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Capture image digests
        run: |
          VERSION="${{ steps.release_tag.outputs.version }}"
          : > image-digests.json
          for ref in \
            "$REGISTRY/$IMAGE_NS/rag-backend:${VERSION}" \
            "$REGISTRY/$IMAGE_NS/admin-backend:${VERSION}" \
            "$REGISTRY/$IMAGE_NS/document-extractor:${VERSION}" \
            "$REGISTRY/$IMAGE_NS/mcp-server:${VERSION}" \
            "$REGISTRY/$IMAGE_NS/frontend:${VERSION}" \
            "$REGISTRY/$IMAGE_NS/admin-frontend:${VERSION}"
          do
            svc=$(basename "${ref%:*}")
            digest=$(docker buildx imagetools inspect "$ref" --format '{{json .Manifest.Digest}}' | jq -r . || true)
            tmp=$(mktemp)
            jq --arg s "$svc" --arg t "$VERSION" --arg d "$digest" \
               '.[$s] = {"tag": $t, "digest": $d}' \
               image-digests.json > "$tmp" || echo '{}' > image-digests.json
            mv "$tmp" image-digests.json || true
          done

      - name: Upload digests
        uses: actions/upload-artifact@v4
        with:
          name: image-digests
          path: image-digests.json
