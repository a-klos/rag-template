name: prepare-release
on:
  workflow_dispatch: {}

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: release
  cancel-in-progress: true

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install semantic-release deps
        run: |
          npm ci

      - name: Compute next version (dry-run)
        id: semrel
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npx semantic-release --dry-run --no-ci | tee semrel.log
          VERSION=$(grep -Eo "next release version is [0-9]+\.[0-9]+\.[0-9]+" semrel.log | awk '{print $5}')
          if [ -z "$VERSION" ]; then echo "No new release required"; exit 1; fi
          echo "$VERSION" > .version
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Bump libs and service pins
        run: |
          python -m pip install --upgrade pip
          pip install tomlkit
          python scripts/bump_pyproject_deps.py --version "${{ steps.semrel.outputs.version }}"

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install Poetry
        run: |
          pip install poetry==2.1.3

      - name: Re-lock services
        run: |
          set -e
          for svc in services/rag-backend services/admin-backend services/document-extractor; do
            echo "Locking $svc"
            (cd "$svc" && poetry lock)
          done

      - name: Update Helm chart versions
        run: |
          pip install pyyaml packaging
          python scripts/bump_chart_versions.py --app-version "${{ steps.semrel.outputs.version }}"

      - name: Commit and open PR
        uses: peter-evans/create-pull-request@v6
        with:
          branch: chore/release-${{ steps.semrel.outputs.version }}
          title: "chore(release): prepare ${{ steps.semrel.outputs.version }}"
          body: |
            Prepare release ${{ steps.semrel.outputs.version }}
            - bump libs and service pins
            - update poetry.lock
            - update Helm chart appVersion and bump patch
            - add .version
          commit-message: "chore(release): prepare ${{ steps.semrel.outputs.version }}"
          add-paths: |
            .version
            libs/**/pyproject.toml
            services/**/pyproject.toml
            services/**/poetry.lock
            infrastructure/**/Chart.yaml
